name: Android CI

on:
  push:
    branches: [ "master","develop" ]
  pull_request:
    branches: [ "master","develop" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Touch local properties
        run: touch local.properties

      - name: Add Api Key
        run: echo "apiKey=\"\"" >> local.properties

      - name: Build Lint
        run: ./gradlew lint

      #- name: Build Ktlint
      #run: bash ./gradlew ktlintCheck

      - name: Upload Build Lint Report
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: app/build/reports/lint-results-debug.html

  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Touch local properties
        run: touch local.properties

      - name: Add Api Key
        run: echo "apiKey=\"\"" >> local.properties

      - name: Unit Tests
        run: bundle exec fastlane android test

      - name: Run Unit Tests
        run: ./gradlew test --stacktrace

      - name: Upload Unit Test Report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: app/build/reports/tests/testDebugUnitTest/

  build:
    needs: [test]
    name: Setup Environment and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Touch local properties
        run: touch local.properties

      - name: Add Api Key
        run: echo "apiKey=\"\"" >> local.properties

      - name: Build with Gradle
        run: ./gradlew build --info

      - name: Decode Google Service JSON File
        uses: timheuer/base64-to-file@v1
        id: google_services
        with:
          fileName: "google_services.json"
          encodedString: ${{ secrets.GOOGLE_SERVICES }}

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: keystore_file
        with:
          fileName: "google_services.json"
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - name: Define version code with offset
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 1
        run: |
          VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
          echo "version_code=$VERSION_CODE" >> $GITHUB_ENV        

      #      - name: Update version code
      #        uses: chkfung/android-version-actions@v1.1
      #        with:
      #          gradlePath: android/app/build.gradle
      #          versionCode: ${{ env.version_code }}

      - name: Build debug apk
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk

  create-release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Touch local properties
        run: touch local.properties

      - name: Add Api Key
        run: echo "apiKey=\"\"" >> local.properties

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: UploadAPK

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/app-debug.apk
          asset_name: app.apk
          asset_content_type: application/zip

      - name: Send APK to Slack
          uses: adrey/slack-file-upload-action@1.0.5
          with:
            token: ${{ secrets.SLACK_TOKEN }}
            path: app/app-debug.apk
            channel: general
            filename: Github Actions App.apk
            initial_comment: ${{ github.event.head_commit.message }}

  deploy-firebase:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Touch local properties
        run: touch local.properties

      - name: Add Api Key
        run: echo "apiKey=\"\"" >> local.properties

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: app

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: Testers
          releaseNotes: "From Github Actions"
          file: app/app-debug.apk