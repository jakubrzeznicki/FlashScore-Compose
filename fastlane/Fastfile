# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

UPDATED_VERSION_CODE = "2"

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

 desc "Assemble a debug apk"
  lane :assemble_debug do
    gradle(task: "assembleDebug")
  end

  desc "Assemble an android test apk"
  lane :assemble_android_test do
    gradle(task: "assembleDebugAndroidTest")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Detekt checks"
  lane :detekt do
    gradle(task: "detekt --continue")
  end

   desc "Build the .aab file"
   lane :build do
     gradle(
       task: "bundle",
       build_type: "Release",
       properties: {
         "android.injected.signing.store.file" => ENV['KEYSTORE_FILE'],
         "android.injected.signing.store.password" => ENV['KEYSTORE_PASSWORD'],
         "android.injected.signing.key.alias" => ENV['KEYSTORE_ALIAS'],
         "android.injected.signing.key.password" => ENV['KEYSTORE_PASSWORD']
       }
     )
   end

  desc "Responsible for uploading .apk to Firebase app distribution."
  lane :distribute_to_firebase do
    firebase_app_distribution(
      app: ENV['FIREBASE_APP_ID'],
      release_notes: "Uploaded from CI/CD",
      android_artifact_type: "APK",
      android_artifact_path: ENV['KEYSTORE_FILE'],
      service_credentials_file: ENV['FIREBASE_KEY'],
      groups: "Testers"
    )
  end

  desc "Submit a new Beta Build to Firebase App Distribution"
  lane :firebase_beta do
    firebase_app_distribution(
      app: "1:322077523128:android:5bf5527e5d2187642a084d"
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(
        task: "bundle",
        build_type: "release",
        print_command: false,
        properties: {
            "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
            "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
            "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
            "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
        }
    )
    upload_to_play_store
  end

#   desc "After successful execution of all task, this block is called"
#   after_all do
#     git_add(path: "*")
#     git_commit(
#       path: "*",
#       message: "#" + UPDATED_VERSION_CODE + " released"
#     )
#     push_to_git_remote(
#       local_branch: buildConfigs.key(options[:buildConfig]),
#       remote: "origin",
#       remote_branch: buildConfigs.key(options[:buildConfig]),
#       tags: true,
#     )
#   end
end
